// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealEstate.Data;

namespace RealEstate.Migrations
{
    [DbContext(typeof(RealEstateContext))]
    [Migration("20240109155805_FinalMig")]
    partial class FinalMig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RealEstate.Models.Comments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IssueId")
                        .HasColumnType("int");

                    b.Property<string>("Testo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IssueId");

                    b.HasIndex("UserId");

                    b.ToTable("Commenti");
                });

            modelBuilder.Entity("RealEstate.Models.House", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Citta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataDisponibilità")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descrizione")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disponibilita")
                        .HasColumnType("bit");

                    b.Property<string>("Indirizzo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MQ")
                        .HasColumnType("float");

                    b.Property<int>("NumeroStanze")
                        .HasColumnType("int");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("TenantId");

                    b.ToTable("Proprietà");
                });

            modelBuilder.Entity("RealEstate.Models.Issue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataApertura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataChiusura")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HouseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HouseId");

                    b.HasIndex("UserId");

                    b.ToTable("Issue");
                });

            modelBuilder.Entity("RealEstate.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RuoloId")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RuoloId");

                    b.ToTable("Utente");
                });

            modelBuilder.Entity("RealEstate.Models.Util.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("RealEstate.Models.Comments", b =>
                {
                    b.HasOne("RealEstate.Models.Issue", null)
                        .WithMany("Commenti")
                        .HasForeignKey("IssueId");

                    b.HasOne("RealEstate.Models.User", "Utente")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("RealEstate.Models.House", b =>
                {
                    b.HasOne("RealEstate.Models.User", "Proprietario")
                        .WithMany()
                        .HasForeignKey("OwnerId");

                    b.HasOne("RealEstate.Models.User", "Inquilino")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Inquilino");

                    b.Navigation("Proprietario");
                });

            modelBuilder.Entity("RealEstate.Models.Issue", b =>
                {
                    b.HasOne("RealEstate.Models.House", "Proprietà")
                        .WithMany("Issue")
                        .HasForeignKey("HouseId");

                    b.HasOne("RealEstate.Models.User", "Utente")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Proprietà");

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("RealEstate.Models.User", b =>
                {
                    b.HasOne("RealEstate.Models.Util.Roles", "Ruolo")
                        .WithMany()
                        .HasForeignKey("RuoloId");

                    b.Navigation("Ruolo");
                });

            modelBuilder.Entity("RealEstate.Models.House", b =>
                {
                    b.Navigation("Issue");
                });

            modelBuilder.Entity("RealEstate.Models.Issue", b =>
                {
                    b.Navigation("Commenti");
                });
#pragma warning restore 612, 618
        }
    }
}
